<core:FragmentDefinition xmlns="sap.m"
    xmlns:l="sap.ui.layout"
    xmlns:fm="sap.ui.layout.form"
    xmlns:core="sap.ui.core"
    xmlns:upload="sap.m.upload">




        <!-- <fm:SimpleForm editable="true" layout="ResponsiveGridLayout" labelSpanXL="4" labelSpanL="4" labelSpanM="12" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false">





        <fm:content>  -->
           
         <VBox alignContent="Center">
    <fm:SimpleForm layout="ColumnLayout" columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight">
    
            <Label text="Time Type" required="true" />
            <Select id="idTimeType" items="{ path: '/SF_Leave_TimeType',
            filters: [
    {
      path: 'category',
      operator: 'EQ',
      value1: 'ABSENCE'
    }
  ],
                                                sorter : {
                                                 path : 'externalName_defaultValue' 
                                             } }"                       
                                                         change="onTimeTyeChange">
                <core:Item key="{externalCode}" text="{externalName_defaultValue}" />
            </Select>

                        <Label text="Available Balance" visible="{= ${LocalViewModel>/uploadAttachment} === false ? true : false }" />
            <Input value="{LeaveBalModel>/balance}" enabled="false" width="40%" visible="{= ${LocalViewModel>/uploadAttachment} === false ? true : false }">
                <layoutData>
                    <l:GridData span="XL2 L3 M4 S4" />
                </layoutData>
            </Input>

       </fm:SimpleForm>


                        <fm:SimpleForm layout="ColumnLayout" columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight">
                         
            <Label text="Start Date" required="true"/>
            <DatePicker id="idStartDate" value="{path:'LocalViewModel>/startDate', type:'sap.ui.model.type.Date'}"  change="onLeaveStartDatChange"/>

            <Label text="{i18n>EndDate}" required="true" visible="{= ${LocalViewModel>/recurringAbs} === false ? true : false }"/>
            <DatePicker id="idEndDate" value="{path:'LocalViewModel>/endDate', type:'sap.ui.model.type.Date'}" visible="{= ${LocalViewModel>/recurringAbs} === false ? true : false }" change="onLeaveEndDateChange"/>



                        </fm:SimpleForm>




        <!-- <fm:SimpleForm layout="ColumnLayout"   columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight"> -->
                         
            <!-- <Label /> -->
            <!-- <Input id="idRequestDay" value="{LocalViewModel>/requestDay} day " enabled="false">
                <layoutData>
                    <l:GridData span="XL2 L3 M4 S4" />
                </layoutData>
            </Input> -->

            <!-- <Label /> -->
            <!-- <DatePicker id="idReturning" value="{path:'LocalViewModel>/returnDate', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true}}" enabled= "false"/> -->

          <!-- </fm:SimpleForm> -->


                   <fm:SimpleForm layout="ColumnLayout"  columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight">             
                             <CheckBox id="idRecCheckbox" text="Recurring Absence" select="onSelectRecurringAbsc"></CheckBox>
                        </fm:SimpleForm>


                   <fm:SimpleForm layout="ColumnLayout"  columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight">             
            <Label text="Recurs" required="true" visible="{LocalViewModel>/recurringAbs}"/>
            <Select id="idRecAbsc" visible="{LocalViewModel>/recurringAbs}">
                <core:Item key="Daily" text="Daily" />
                <core:Item key="Weekly" text="Weekly" />
                <core:Item key="BiWeekly" text="BiWeekly" />
            </Select>

            <Label visible="{LocalViewModel>/recurringAbs}" text="Ends On" required="true"/>
            <DatePicker visible="{LocalViewModel>/recurringAbs}" id="idEndonDate" value="{path:'LocalViewModel>/endsOnDate', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true}}" />


                                                  <!-- <Label visible="{LocalViewModel>/recurringAbs}" text="Total Requesting" />
            <Input visible="{LocalViewModel>/recurringAbs}" value=" " enabled="false">
                <layoutData>
                    <l:GridData span="XL2 L3 M4 S4" />
                </layoutData>
            </Input> -->
                             </fm:SimpleForm>
                                           <!-- <fm:SimpleForm layout="ColumnLayout"  columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight">      
                                    <Label text="Comment" />
                                    <TextArea ></TextArea>
                             </fm:SimpleForm>        -->

<!-- 
 <fm:SimpleForm layout="ColumnLayout"  columnsM="2" columnsL="3" columnsXL="3" singleContainerFullSize="false" class="style-RemoveTitleHeight">              -->
              <!-- <UploadCollection id="UploadCollection"
     maximumFilenameLength="55" 
     maximumFileSize="10"
     multiple="false" 
     sameFilenameAllowed="true" 
     instantUpload="true" 
     noDataDescription="Drop files or use the &quot;Add&quot; button to keep files ready for upload" 
     change="onAttachmentChange" 
     fileDeleted="onFileDeleted" 
     filenameLengthExceed="onFilenameLengthExceed" 
     fileSizeExceed="onFileSizeExceed" 
     typeMissmatch="onTypeMissmatch" 
     uploadComplete="onUploadComplete" 
     beforeUploadStarts="onBeforeUploadStarts" 
     visible="{LocalViewModel>/uploadAttachment}"/>   -->
                        <!-- </fm:SimpleForm>  -->
        <upload:UploadSet
				id="UploadSet"
				instantUpload="true"
				showIcons="true"
				uploadEnabled="true"
				terminationEnabled="true"
				fileTypes="txt,png,jpg,jpeg,pdf"
				maxFileNameLength="255"
				maxFileSize="200"
				uploadUrl="../../../../upload"
                afterItemRemoved="onFileDeleted"
                afterItemAdded="onFileAdded"
                visible="{LocalViewModel>/uploadAttachment}"
				>
			
			
		</upload:UploadSet> 

                    </VBox> 
       
       
        <!-- </fm:content>
    </fm:SimpleForm>  -->
    

</core:FragmentDefinition>

