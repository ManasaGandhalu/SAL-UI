<mvc:View controllerName="com.sal.salhr.controller.CreateSalaryIncrementRequest"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
    xmlns:f="sap.f"
    xmlns:l="sap.ui.layout"
    xmlns:core="sap.ui.core"
    xmlns:fm="sap.ui.layout.form"
    xmlns:upload="sap.m.upload" height="100%">
    <f:DynamicPage id="dynamicPageId" headerExpanded="true" showFooter="true">
        <!-- DynamicPage Title -->
        <f:title>
            <f:DynamicPageTitle id="idDynamicPageTitle">
                <f:heading>
                    <Title id="idPageTitle" text="New Job and Compensation Information Request" class="sapUiSmallMarginBegin"/>
                </f:heading>
                <f:breadcrumbs>
                    <Breadcrumbs id="idBreadcrumbs" currentLocationText="New Job and Compensation Information Request" class="sapUiSmallMarginBegin">
                        <Link id="idSalaryLink" text="{i18n>HumanResource}" press="onCreateCancelPress"/>
                    </Breadcrumbs>
                </f:breadcrumbs>
            </f:DynamicPageTitle>
        </f:title>
        <f:content>
            <!-- <l:VerticalLayout class="sapUiNoMargin sapUiNoContentPadding">
                <l:content>  -->
            <VBox>

                <fm:SimpleForm layout="ColumnLayout" columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12" class="style-RemoveTitleHeight">
                    <Label text="When would you like your changes to take effect? " required="true" />
                    <DatePicker id="idStartDate" value="{path:'LocalViewModel>/currentDate', type:'sap.ui.model.type.Date', formatOptions: {
                        pattern: 'MM/dd/yyyy'
                            }}" minDate="{LocalViewModel>/minDate}"/>

                    <Label text="PRN" required="true" />
                    <Input id="idSalIncPRN" required="true" width="100%" valueHelpOnly="true" showValueHelp="true" valueHelpRequest="onValueHelpRequest" />

                </fm:SimpleForm>
                <VBox visible="{= ${LocalViewModel>/checkBoxVisible} ? true : false }">
                    <fm:SimpleForm layout="ColumnLayout" columnsM="2" columnsL="3" columnsXL="4" singleContainerFullSize="false" class="style-RemoveTitleHeight" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12">
                        <Label text="Choose what you want to change"/>
                        <CheckBox id="idJobInfo" select="onSelectJobInfo" text="Job Information"></CheckBox>
                        <CheckBox width="25rem" id="idCompensationInfo" select="onSelectCompensation" text="Compensation Information"></CheckBox>
                    </fm:SimpleForm>
                 </VBox>

                <Panel visible="{= ${LocalViewModel>/jobInfoVisible} ? true : false }">
                    <fm:SimpleForm title="Position Information" layout="ColumnLayout" class="style-RemoveTitleHeight" columnsM="2" columnsL="3" columnsXL="3" singleContainerFullSize="false" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12">
                        <!-- <Label text="Incumbent of Parent Position" required="false" />
                        <Input id="idIncumbentPosition" value="{jobInfoNav>/results/0/managerId}"/> -->

                        <Label text="Position" />
                        <Input id="id
                        ]Position"  width="100%" valueHelpOnly="true" value="{ parts : [{ path: 'jobModel>/positionNav/externalName_defaultValue'}, {path: 'jobModel>/position'} ], formatter: '.formatter.formatLabel' }"   showValueHelp="true" valueHelpRequest="onPositionRequest" />

                        <Label text="Time in Position" />
                        <Input enabled="false" value="{path : 'jobModel>/startDate', formatter: '.formatter.formatTimeInPosition' }" />
                    </fm:SimpleForm>
                    <fm:SimpleForm title="Organization Information" layout="ColumnLayout" class="style-RemoveTitleHeight" columnsM="2" columnsL="3" columnsXL="3" singleContainerFullSize="false" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12">
                        
                        <Label text="Company" required="true" />
                        <ComboBox id="idCompany" change="onCompanyChange" items="{ path: '/SF_FOCompany', sorter : {
                                path : 'name' 
                            } }" selectedKey="{jobModel>/company}">
                            <core:Item key="{externalCode}" text="{name} ({externalCode})"/>
                        </ComboBox>

                        <Label text="Business Unit" />
                        <ComboBox id="idBU" change="onBusinessUnitChange" items="{ path: '/SF_BusinessUnit', sorter : {
                                path : 'name' 
                            } }" selectedKey="{jobModel>/businessUnit}">
                            <core:Item key="{externalCode}" text="{name_en_US} ({externalCode})"/>
                        </ComboBox>

                        <Label text="Division" />
                        <ComboBox id="idDivision" enabled="{= ${LocalViewModel>/divisionEnabled} ? true : false }" change="onDivisionChange" items="{DivisionModel>/}" selectedKey="{jobModel>/division}">
                            <core:Item key="{DivisionModel>externalCode}" text="{DivisionModel>name_en_US} ({DivisionModel>externalCode})"/>
                        </ComboBox>
                    
                        <Label text="Department" />
                        <ComboBox id="idDepartment" enabled="{= ${LocalViewModel>/departmentEnabled} ? true : false }" change="onDepartmentChange" items="{DepartmentModel>/}" selectedKey="{jobModel>/department}">
                            <core:Item key="{DepartmentModel>externalCode}" text="{DepartmentModel>name_en_US} ({DepartmentModel>externalCode})"/>
                        </ComboBox>

                        <Label text="Section" />
                        <ComboBox id="idSection" enabled="{= ${LocalViewModel>/sectionEnabled} ? true : false }" items="{SectionModel>/}" selectedKey="{jobModel>/customString10}">
                            <core:Item key="{SectionModel>externalCode}" text="{SectionModel>externalName} ({SectionModel>externalCode})"/>
                        </ComboBox>

                        <Label text="Location Group" />
                        <ComboBox id="idLocationGroup" change="onLocationGroupChange" items="{ path: '/SF_LocationGroup', sorter : {
                                path : 'name' 
                            }, filters: [{ path: 'status', operator: 'EQ', value1: 'A' }]  }" selectedKey="{jobModel>/customString12}">
                            <core:Item key="{externalCode}" text="{name} ({externalCode})"/>
                        </ComboBox>

                        <Label text="Location" required="true" />
                        <ComboBox id="idLocation" enabled="{= ${LocalViewModel>/locationEnabled} ? true : false }" change="onLocationChange" items="{LocationModel>/}" selectedKey="{jobModel>/location}">
                            <core:Item key="{LocationModel>externalCode}" text="{LocationModel>name} ({LocationModel>externalCode})"/>
                        </ComboBox>

                        <Label text="Time Zone" />
                        <ComboBox id="idTimezone" enabled="false" items="{TimezonesModel>/}" selectedKey="{jobModel>/timezone}">
                            <core:Item key="{TimezonesModel>value}" text="{TimezonesModel>label}"/>
                        </ComboBox>
                        

                        <Label text="Cost Center" />
                        <Input id="idCostCenter"  width="100%" valueHelpOnly="true" value="{ parts : [{ path: 'jobModel>/costCenterNav/name'}, {path: 'jobModel>/costCenter'} ], formatter: '.formatter.formatLabel' }"  showValueHelp="true" valueHelpRequest="onCostCenterRequest" />
                        
                    </fm:SimpleForm>


                    <fm:SimpleForm title="Job Information" layout="ColumnLayout" class="style-RemoveTitleHeight" columnsM="2" columnsL="3" columnsXL="3" singleContainerFullSize="false" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12">

                        <Label text="Direct Manager" required="true" />
                        <Input id="idDirectManager" required="true" width="100%" value="{ parts : [{ path: 'jobModel>/managerUserNav/defaultFullName'}, {path: 'jobModel>/managerId'} ], formatter: '.formatter.formatLabel' }" valueHelpOnly="true" showValueHelp="true" valueHelpRequest="onDirectMngrValueHelpRequest" />


                        <Label text="Job Classification" />
                        <Input id="idJobclassification" required="true" width="100%" valueHelpOnly="true" value="{ parts : [{ path: 'jobModel>/jobCodeNav/name'}, {path: 'jobModel>/jobCode'} ], formatter: '.formatter.formatLabel' }" showValueHelp="true" valueHelpRequest="onJobClasssificationValueHelpRequest" />

                        <Label text="Job Level" />
                        <ComboBox id="idJobLevel" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'JobLevel' }] }" selectedKey="{jobModel>/customString1}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Job Title" />
                        <Input id="idJobTitle" value="{jobModel>/jobTitle}" />

                        <Label text="Pay Grade" />
                        <ComboBox id="idPayGrade" change="onPayGradeChange"  items="{ path: '/SF_FOPayGrade', sorter : {
                                path : 'name' 
                            } }" selectedKey="{jobModel>/payGrade}">
                            <core:Item key="{externalCode}" text="{name} ({externalCode})"/>
                        </ComboBox>

                        <Label text="Pay Range" />
                        <!-- <ComboBox id="idPayRange" items="{ path: '/SF_PayRange', sorter : {
                                path : 'name' 
                            } }" selectedKey="{jobModel>/customString9}">
                            <core:Item key="{externalCode}" text="{name} ({externalCode})"/>
                        </ComboBox> -->

                          <ComboBox id="idPayRange" enabled="{= ${LocalViewModel>/payRangeEnabled} ? true : false }" change="onLoca" items="{PayRangeModel>/}" selectedKey="{jobModel>/customString9}">
                            <core:Item key="{PayRangeModel>externalCode}" text="{PayRangeModel>name} ({PayRangeModel>externalCode})"/>
                        </ComboBox>

                        <Label text="IK/OOK" />
                        <ComboBox id="idIKOOK" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'regular-temp' }] }" selectedKey="{jobModel>/regularTemp}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Is Full Time Employee" />
                        <ComboBox id="idFullTimeEmp" selectedKey="{jobModel>/isFulltimeEmployee}">
                            <core:Item key="true" text="Yes"/>
                            <core:Item key="false" text="No"/>
                        </ComboBox>

                      <Label text="Employee Class" />
                        <ComboBox id="idEmployeeClass" change="onEmployeeClassChange"   items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'EMPLOYEECLASS' }] }" selectedKey="{jobModel>/employeeClass}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Notes" />
                        <Input id="idNotes" value="{jobModel>/notes}" />

                        <Label text="Pay Group" />
                        <ComboBox id="idPayGroup" enabled="{= ${LocalViewModel>/payGroupEnabled} ? true : false }" items="{PayGroupModel>/}" selectedKey="{jobModel>/payGroup}">
                            <core:Item key="{PayGroupModel>externalCode}" text="{PayGroupModel>name} ({PayGroupModel>externalCode})"/>
                        </ComboBox>

                        <Label text="Probationary Period End Date" />
                        <DatePicker id="idProbationaryDate" value="{path:'jobModel>/probationPeriodEndDate', type:'sap.ui.model.type.Date',  formatOptions: {
                                                    pattern: 'MM/dd/yyyy'
                                                }}" />

                        <Label text="Country" />
                        <ComboBox enabled="false" id="idJobCountry" items="{ path: '/SF_Country', sorter : {
                                path : 'externalName_defaultValue' 
                            } }" selectedKey="{jobModel>/countryOfCompany}">
                            <core:Item key="{code}" text="{externalName_defaultValue} ({code})"/>
                        </ComboBox>


                       

                           <Label text="Employee Type" />
                        <!-- <ComboBox id="idEmployeeType" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'employee-type' }] }" selectedKey="{jobModel>/employeeType}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox> -->

                          <ComboBox id="idEmployeeType" enabled="{= ${LocalViewModel>/empTypeEnabled} ? true : false }" change="onLoca" items="{EmployeeTypeModel>/}" selectedKey="{jobModel>/employeeType}">
                            <core:Item key="{EmployeeTypeModel>id}" text="{EmployeeTypeModel>localeLabel}"/>
                        </ComboBox>

                        <Label text="Employment Type" />
                        <ComboBox id="idEmploymentType" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'employmentType' }] }" selectedKey="{jobModel>/employmentType}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Pay Scale Type" required="true" />
                        <ComboBox id="idPayScaleType" change="onPayScaleTypeChange" items="{ path: '/SF_PayScaleType', sorter : {
                                path : 'externalName_defaultValue' 
                            } }" selectedKey="{jobModel>/payScaleType}">
                            <core:Item key="{code}" text="{externalName_defaultValue} ({code})"/>
                        </ComboBox>


                        <Label text="Pay Scale Area" required="true" />
                        <ComboBox id="idPayScaleArea" items="{ path: '/SF_PayScaleArea', sorter : {
                                path : 'externalName_defaultValue' 
                            } }" selectedKey="{jobModel>/payScaleArea}">
                            <core:Item key="{code}" text="{externalName_defaultValue} ({code})"/>
                        </ComboBox>

                        <Label text="Pay Scale Group" />
                        <!-- <ComboBox change="onPayGroupChange" id="idPayScaleGroup" items="{ path: '/SF_PayScaleGroup', sorter : {
                                path : 'externalName_defaultValue' 
                            } }" selectedKey="{jobModel>/payScaleGroup}">
                            <core:Item key="{code}" text="{externalName_defaultValue} ({code})"/>
                        </ComboBox> -->


                         <ComboBox id="idPayScaleGroup" enabled="{= ${LocalViewModel>/payGroupEnabled} ? true : false }" change="onPayGroupChange" items="{PayScaleGroupModel>/}" selectedKey="{jobModel>/payScaleLevel}">
                            <core:Item key="{PayScaleGroupModel>code}" text="{PayScaleGroupModel>externalName_defaultValue} ({PayScaleGroupModel>code})"/>
                        </ComboBox>

                        <Label text="Pay Scale Level" />
                        <!-- <ComboBox id="idPayScaleLevel" items="{ path: '/SF_PayScaleLevel', sorter : {
                                path : 'externalName_defaultValue' 
                            } }" selectedKey="{jobModel>/payScaleLevel}">
                            <core:Item key="{code}" text="{externalName_defaultValue} ({code})"/>
                        </ComboBox> -->


                          <ComboBox id="idPayScaleLevel" enabled="{= ${LocalViewModel>/payScaleLevelEnabled} ? true : false }"  items="{PayScaleLevelModel>/}" selectedKey="{jobModel>/payScaleLevel}">
                            <core:Item key="{PayScaleLevelModel>code}" text="{PayScaleLevelModel>externalName_defaultValue} ({PayScaleLevelModel>code})"/>
                        </ComboBox>

                        

                        <Label text="Employee Notice Period" />
                        <ComboBox id="idEmployeeNoticePeriod" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'EENoticePeriod' }] }" selectedKey="{jobModel>/employeeNoticePeriod}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Contract Type" required="true" />
                        <ComboBox id="idContractType" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'contractType' }] }" selectedKey="{jobModel>/contractType}">
                            <!-- <core:Item key="{ parts : [{ path: 'picklistLabels'}, {value: 'optionId'} ], formatter: '.formatter.formatPicklistOptions' }" text="{ parts : [{ path: 'picklistLabels'}, {value: 'label'} ], formatter: '.formatter.formatPicklistOptions' }"/> -->
                             <core:Item key="{id}" text="{localeLabel} ({id})"/>
                        </ComboBox>

                        <Label text="Duration" />
                        <ComboBox id="idDuration" items="{ path: '/SF_PicklistOption', filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'duraition' }] }" selectedKey="{jobModel>/customString13}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Contract End Date" />
                        <DatePicker value="{path:'jobModel>/contractEndDate', type:'sap.ui.model.type.Date',  formatOptions: {
                                                    pattern: 'MM/dd/yyyy'
                                                }}" />

                                               

                        <Label text="Auto Renewal" />
                        <ComboBox id="idAutoRenewal" items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'yesNo' }] }" selectedKey="{jobModel>/customString11}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Job Family" />
                        <Input value="{jobModel>/jobGroup}" />

                        <Label text="Initial Entry" />
                        <DatePicker  value="{path:'jobModel>/initialEntryDate', type:'sap.ui.model.type.Date',  formatOptions: {
                                                    pattern: 'MM/dd/yyyy'
                                                }}" />

                        <Label text="Entry into Group" />
                        <DatePicker value="{path:'jobModel>/entryIntoGroup', type:'sap.ui.model.type.Date',  formatOptions: {
                                                    pattern: 'MM/dd/yyyy'
                                                }}" />


                    </fm:SimpleForm>
                </Panel>
                <Panel visible="{= ${LocalViewModel>/componesationInfoVisible} ? true : false }">
                    <fm:SimpleForm title="Compensation Information" layout="ColumnLayout" class="style-RemoveTitleHeight" columnsM="2" columnsL="3" columnsXL="3" singleContainerFullSize="false" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12">
                        <Label text="Company" required="true" />
                        
                        <Label text="Pay Group" required="true" />
                        <ComboBox id="idCompPayGroup" enabled="{= ${LocalViewModel>/payGroupEnabled} ? true : false }" items="{PayGroupModel>/}" selectedKey="{compensationModel>/payGroup}">
                            <core:Item key="{PayGroupModel>externalCode}" text="{PayGroupModel>name} ({PayGroupModel>externalCode})"/>
                        </ComboBox>


                        <Label text="is Eligible for Car" />
                        <ComboBox id="idEligibleForCar" enabled="false" selectedKey="{compensationModel>/isEligibleForCar}">
                            <core:Item key="true" text="Yes"/>
                            <core:Item key="false" text="No"/>
                        </ComboBox>
                        <!-- <RadioButtonGroup  editable="false" columns="2"  Select="onRbChnageMain" SelectedIndex="{= ${compensationModel>/isEligibleForCar}  ? 0 : 1 }">
                            <buttons>
                                <RadioButton text="Yes"/>
                                <RadioButton text="No"/>
                            </buttons>
                        </RadioButtonGroup> -->

                        <Label text="Monthly Basic" />
                        <Input value="{compensationModel>/customDouble1}" />

                        <Label text="Country" required="true" />
                        <ComboBox id="idCompCountry" items="{ path: '/SF_Country'}" selectedKey="{compensationModel>/customString2}">
                            <core:Item key="{numericCountryCode}" text="{externalName_defaultValue}"/>
                        </ComboBox>

                        <Label text="Pay Type" />
                        <ComboBox items="{ path: '/SF_PicklistOption',sorter : {
                                path : 'picklistLabels/label' 
                            }, filters: [{ path: 'picklist/picklistId', operator: 'EQ', value1: 'PayType' }] }" selectedKey="{compensationModel>/payType}">
                            <core:Item key="{id}" text="{localeLabel}"/>
                        </ComboBox>

                        <Label text="Scheme Change Date" />
                        <DatePicker id="idSchemeChangeDate" value="{path:'compensationModel>/customDate1', type:'sap.ui.model.type.Date', formatOptions: {
                                                  pattern: 'MM/dd/yyyy'
                                                }}" />

                        <Label text="Change from Commision to Variable" required="true" />
                        <Input id="idCommision" value="{compensationModel>/customString3}"/>
                    </fm:SimpleForm>
                    <!-- <VBox>
                       <Table id="idConsumedTable" growing="true" growingThreshold="10">
                            <headerToolbar>
                                <OverflowToolbar>
                                       <Title text="{i18n>Compensation}" level="H4" />
                            <content>
                                <ToolbarSpacer></ToolbarSpacer>
                               
                            </content>
                                </OverflowToolbar>
                            </headerToolbar>
                            <columns>
                                <Column demandPopin="true" minScreenWidth="Tablet">
                                 <Label text="Pay Component" required="true" />
                                </Column>
                                <Column demandPopin="true" minScreenWidth="Tablet">
                                   <Label text="Amount" required="false" />
                                </Column>
                                <Column demandPopin="true" minScreenWidth="Tablet">
                                   <Label text="Currency" required="true" />
                                </Column>
                                <Column demandPopin="true" minScreenWidth="Tablet">
                                  <Label text="Frequency" required="true" />
                                </Column>
                                <Column demandPopin="true" minScreenWidth="Tablet">
                                  <Label text="Payment-End-Date" required="true" />
                                </Column>
                                 <Column demandPopin="true" minScreenWidth="Tablet">
                                      <Label text="" required="false" />
                                </Column>
                            </columns>
                            <items>
                                <ColumnListItem id="idBOQItems">
                                    <cells>
                                             <Input value="{jobModel>/payComponent}"/>
                                            <Input value="{jobModel>/paycompvalue}"/>
                                            <Input value="{jobModel>/currencyCode}"/>
                                            
                                              <ComboBox id="idFrequency" items="{ path: '/SF_FOFrequency'}" selectedKey="{jobModel>/frequency}">
                                               <core:Item key="{externalCode}" text="{description}"/>
                                                </ComboBox>
                                              <DatePicker value="{path:'jobModel>/endDate', type:'sap.ui.model.type.Date', formatOptions: {
                                                    pattern: 'MM/dd/yyyy'
                                                }}" />
                                               <Button icon="sap-icon://delete" press="onDeleteItemPress" type="Transparent"/>
                                    </cells>
                                </ColumnListItem>
                            </items>
                        </Table>
                    </VBox> -->
                </Panel>
                <!-- </l:content>
            </l:VerticalLayout> -->
            </VBox>
        </f:content>
        <!-- DynamicPage Footer -->
        <f:footer>
            <OverflowToolbar id="idOverflowToolbar" visible="true">
                <ToolbarSpacer id="idToolbarSpacer"/>
                <Button id="idResetBTN" text="{i18n>Reset}" type="Ghost" press="onResetPress"/>
                <Button id="idCancelBTN" text="{i18n>Cancel}" type="Ghost" press="onCreateCancelPress"/>
                <Button id="idRaiseRequestBTN" enabled="{= ${LocalViewModel>/jobInfoVisible} ? true : ${LocalViewModel>/componesationInfoVisible} ? true : false }" text="{i18n>RaiseRequest}" press="onRaiseRequestPress" class="RaiseRequestButton"/>
            </OverflowToolbar>
        </f:footer>
    </f:DynamicPage>
</mvc:View>